@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PM.Core.PaginatedList<PM.Models.Profile>
@if (Model.Any())
{
    <div id="grid">
        <table class="table table-hover sortable"
               id="tbData">
            <caption>
                @if (string.IsNullOrEmpty(Model.Query))
                {
                    @:Profiles list
                }
                else
                {
                    @:Profiles list with query <b>@Model.Query</b>
                }
            </caption>
            <thead class="table-dark">
            <tr>
                <th>
                    Name
                </th>
                <th class="text-center">
                    Description
                </th> 
                <th class="text-center">
                    Profile type
                </th>
                <th class="text-center">Associated profile items count</th>
                <th>...</th>
            </tr>
            </thead>
            @foreach (var profileType in Model)
            {
                <tr>
                    <td>
                        @profileType.Name 
                        <br>
                        <small>created @profileType.DateCreated.ToShortDateString()</small>
                    </td>
                    <td class="text-center">
                        @profileType.Description
                    </td>
                    <td class="text-center">
                       @profileType.Type.Name
                    </td>
                    <td class="text-center">
                        @profileType.Items.Count
                    </td>
                    <td>
                        <a asp-page="/ProfileItems/Edit"
                           asp-route-id="@profileType.ProfileId">
                            <i class="fas fa-edit"></i>
                        </a>
                        &nbsp;&nbsp;
                        <a asp-page="/ProfileItems/Delete"
                           asp-route-id="@profileType.ProfileId">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </td>
                </tr>
            }
        </table>
        <nav>
            <ul class="pagination">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    @if (Model.PageIndex - 1 < 1)
                    {
                        <a asp-route-pageNumber="1"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            <i class="fa-solid fa-arrow-left"></i>
                        </a>
                    }
                    else
                    {
                        <a asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            <i class="fa-solid fa-arrow-left"></i>
                        </a>
                    }
                </li>
                @for (var currentPageIndex = 1; currentPageIndex <= Model.TotalPages; currentPageIndex++)
                {
                    if (currentPageIndex < Model.PageSize)
                    {
                        <li class="page-item @(Model.PageIndex == currentPageIndex ? "active" : "")">
                            <a asp-route-pageNumber="@currentPageIndex"
                               asp-route-query="@Model.Query"
                               class="page-link">
                                @currentPageIndex
                            </a>
                        </li>
                    }
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    @if (Model.PageIndex + 1 <= Model.TotalPages)
                    {
                        if (Model.PageSize < Model.TotalPages)
                        {
                            <span class="page-link">...</span>
                        }
                    }
                </li>
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    @if (Model.PageIndex + 1 <= Model.TotalPages)
                    {
                        if (Model.PageSize < Model.TotalPages)
                        {
                            <a asp-route-pageNumber="@Model.TotalPages"
                               asp-route-query="@Model.Query"
                               class="page-link">
                                @Model.TotalPages
                            </a>
                        }
                    }
                </li>
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    @if (Model.PageIndex + 1 < Model.TotalPages)
                    {
                        <a asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            <i class="fa-solid fa-arrow-right"></i>
                        </a>
                    }
                    else
                    {
                        <a asp-route-pageNumber="@(Model.TotalPages)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            <i class="fa-solid fa-arrow-right"></i>
                        </a>
                    }
                </li>
            </ul>
        </nav>
    </div>
}
else
{
    <p>No data! Check query or add new <a asp-page="/Profiles/Create">profile</a>.</p>
}